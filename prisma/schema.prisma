// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = "mongodb-Url"
}

model Course {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  userId      String
  title       String
  description String?
  imgUrl      String?
  price       Float?
  isPublished Boolean @default(false)

  categoryId String?
  category Category ? @relation(fields: [categoryId], references: [id] )
  attachment Attachment[]
  chapters Chapter[]
  purchases Purchase[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([categoryId])
}

model Category {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String @unique
  course Course[]
}

model Attachment {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  url  String

  courseId String
  course   Course @relation(fields: [courseId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([courseId])
}

model Chapter{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  title String
  description String? 
  videoUrl String 
  position Int
  isPublished Boolean @default(false)
  isFree Boolean @default(false)
  
  muxData MuxData?

  courseId String

  course Course @relation(fields: [courseId], references: [id], onDelete:Cascade)

  userProgress UserProgress[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt


}

model MuxData{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  assetId String
  playbackId String?

  chapterId String @unique
  chapter Chapter @relation(fields: [chapterId], references: [id], onDelete:Cascade)

}

model UserProgress{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String
  chapterId String
  chapter Chapter @relation(fields: [chapterId], references: [id], onDelete: Cascade)

  isCompleted Boolean @default(false)
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@index([chapterId])
  @@unique([userId,chapterId])
}

model Purchase{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String

  courseId String
  course Course @relation(fields: [courseId], references: [id], onDelete:Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
}

model StripeCustomer{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @unique
  stripeCustomerId String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}